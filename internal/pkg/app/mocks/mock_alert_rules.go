// Code generated by MockGen. DO NOT EDIT.
// Source: alert_rules.go

// Package mocks is a generated GoMock package.
package mocks

import (
	grafana "amazon-managed-grafana-migrator/internal/pkg/grafana"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockcustomAPI is a mock of customAPI interface.
type MockcustomAPI struct {
	ctrl     *gomock.Controller
	recorder *MockcustomAPIMockRecorder
}

// MockcustomAPIMockRecorder is the mock recorder for MockcustomAPI.
type MockcustomAPIMockRecorder struct {
	mock *MockcustomAPI
}

// NewMockcustomAPI creates a new mock instance.
func NewMockcustomAPI(ctrl *gomock.Controller) *MockcustomAPI {
	mock := &MockcustomAPI{ctrl: ctrl}
	mock.recorder = &MockcustomAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcustomAPI) EXPECT() *MockcustomAPIMockRecorder {
	return m.recorder
}

// AllRuleGroups mocks base method.
func (m *MockcustomAPI) AllRuleGroups() (grafana.RuleGroupsByFolder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllRuleGroups")
	ret0, _ := ret[0].(grafana.RuleGroupsByFolder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllRuleGroups indicates an expected call of AllRuleGroups.
func (mr *MockcustomAPIMockRecorder) AllRuleGroups() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllRuleGroups", reflect.TypeOf((*MockcustomAPI)(nil).AllRuleGroups))
}
